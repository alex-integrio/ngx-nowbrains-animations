/***********************************************************
 **  @project
 **  @file
 **  @author Brice Daupiard <brice.daupiard@nowbrains.com>
 **  @Date 09/08/2022
 **  @Description
 ***********************************************************/
import { animate, keyframes, style, transition, trigger } from "@angular/animations";
const ANIMATION_TYPE_CUBIC_BEZIER = 'cubic-bezier(0.39, 0.58, 0.57, 1)';
export const FadeSlideInOut = trigger('fadeSlideInOut', [
    transition(':enter', [
        style({ opacity: 0, transform: 'translateY({{percent_start}}%)' }),
        animate(`{{ttx}}ms ${ANIMATION_TYPE_CUBIC_BEZIER}`, keyframes([
            style({ opacity: 0.5, transform: 'translateY({{percent_start}}%)', offset: 0.2 }),
            style({ opacity: 1, transform: 'translateY({{percent_start_1}}%)', offset: 0.5 }),
            style({ transform: 'translateY({{percent_start_2}}%)', offset: 0.8 }),
            style({ transform: 'translateY(0%)', offset: 1 })
        ]))
    ]),
    transition(':leave', [
        style({ height: '100%' }),
        animate('100ms ease-in-out', keyframes([
            style({ transform: 'translateY({{percent_start}}%)', offset: 0.2 }),
            style({ opacity: 0.5, transform: 'translateY({{percent_start_1}}%)', offset: 0.6 }),
            style({ opacity: 0.2, transform: 'translateY({{percent_start_2}}%)', offset: 0.8 }),
            style({ opacity: 0, transform: 'translateY(0%)', offset: 1 })
        ]))
    ])
]);
export const FadeSlideInOutKonversoOpacityOut = trigger('FadeSlideInOutKonversoOpacityOut', [
    transition(':enter', [
        style({ opacity: 0, transform: 'translateY({{percent_start}}%)' }),
        animate(`{{ttx}}ms ${ANIMATION_TYPE_CUBIC_BEZIER}`, keyframes([
            style({ opacity: 0.5, transform: 'translateY({{percent_start}}%)', offset: 0.2 }),
            style({ opacity: 1, transform: 'translateY({{percent_start_1}}%)', offset: 0.5 }),
            style({ transform: 'translateY({{percent_start_2}}%)', offset: 0.8 }),
            style({ transform: 'translateY(0%)', offset: 1 })
        ]))
    ]),
    transition(':leave', [
        style({ opacity: 1 }),
        animate(`{{ttx}}ms ${ANIMATION_TYPE_CUBIC_BEZIER}`, style({ opacity: 0 }))
    ])
]);
export const FadeSlideInOutKonversoTranslateOut = trigger('FadeSlideInOutKonversoTranslateOut', [
    transition(':enter', [
        style({ opacity: 0, transform: 'translateY({{percent_start}}%)' }),
        animate(`{{ttx}}ms ${ANIMATION_TYPE_CUBIC_BEZIER}`, keyframes([
            style({ opacity: 0.5, transform: 'translateY({{percent_start}}%)', offset: 0.2 }),
            style({ opacity: 1, transform: 'translateY({{percent_start_1}}%)', offset: 0.5 }),
            style({ transform: 'translateY({{percent_start_2}}%)', offset: 0.8 }),
            style({ transform: 'translateY(0%)', offset: 1 })
        ]))
    ]),
    transition(':leave', [
        style({ height: '100%' }),
        animate('100ms ease-in-out', keyframes([
            style({ transform: 'translateY({{percent_start}}%)', offset: 0.2 }),
            style({ opacity: 0.5, transform: 'translateY({{percent_start_1}}%)', offset: 0.6 }),
            style({ opacity: 0.2, transform: 'translateY({{percent_start_2}}%)', offset: 0.8 }),
            style({ opacity: 0, transform: 'translateY(0%)', offset: 1 })
        ]))
    ])
]);
export const FadeSlideInOutCasesFeedHome = trigger('FadeSlideInOutCasesFeedHome', [
    transition(':enter', [
        style({ opacity: 0, transform: 'translateY({{percent_start}}%)' }),
        animate(`{{ttx}}ms ${ANIMATION_TYPE_CUBIC_BEZIER}`, keyframes([
            style({ opacity: 0.5, transform: 'translateY({{percent_start}}%)', offset: 0.2 }),
            style({ opacity: 1, transform: 'translateY({{percent_start_1}}%)', offset: 0.5 }),
            style({ transform: 'translateY({{percent_start_2}}%)', offset: 0.75 }),
            style({ transform: 'translateY(0%)', offset: 1 })
        ]))
    ]),
    transition(':leave', [
        animate('500ms ease', keyframes([
            style({ opacity: 0 }),
        ]))
    ])
]);
export const FadeSlideInOutStagger = trigger('fadeSlideInOutStagger', [
    transition(':enter', [
        style({ opacity: 0, transform: 'translateY({{percent_start}}%)' }),
        animate(`{{ttx}}ms ${ANIMATION_TYPE_CUBIC_BEZIER}`, keyframes([
            style({ opacity: 0.2, transform: 'translateY({{percent_start}}%)', offset: 0.2 }),
            style({ opacity: 0.5, transform: 'translateY({{percent_start_1}}%)', offset: 0.5 }),
            style({ opacity: 1, transform: 'translateY({{percent_start_2}}%)', offset: 0.8 }),
            style({ transform: 'translateY(0%)', offset: 1 })
        ]))
    ]),
    transition(':leave', [
        style({ height: '100%' }),
        animate('100ms 100ms ease-in-out', keyframes([
            style({ transform: 'translateY({{percent_start}}%)', offset: 0.2 }),
            style({ opacity: 0.5, transform: 'translateY({{percent_start_1}}%)', offset: 0.6 }),
            style({ opacity: 0.2, transform: 'translateY({{percent_start_2}}%)', offset: 0.8 }),
            style({ opacity: 0, transform: 'translateY(0%)', offset: 1 })
        ]))
    ])
]);
//# sourceMappingURL=data:application/json;base64,